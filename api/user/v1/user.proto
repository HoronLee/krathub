syntax = "proto3";

package krathub.user.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "errors/errors.proto";
import "google/api/client.proto";

option go_package = "krathub/api/v1/user;userv1";
option java_multiple_files = true;
option java_package = "dev.krathub.api.user.v1";
option java_outer_classname = "UserProtoV1";

// 错误码定义
enum ErrorReason {
  // 设置缺省错误码
  option (errors.default_code) = 500;
  // 用户未找到
  USER_NOT_FOUND = 0 [(errors.code) = 404];
  // 删除用户失败
  DELETE_USER_FAILED = 8 [(errors.code) = 500];
}

service User{

  rpc CurrentUserInfo(CurrentUserInfoRequest) returns (CurrentUserInfoReply) {
    option (google.api.method_signature) = "";
    option (google.api.http) = {
      get: "/v1/user/info"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserReply) {
    option (google.api.method_signature) = "id";
    option (google.api.http) = {
      delete: "/v1/user/delete/{id}"
    };
  }

}

message CurrentUserInfoRequest {
}

message CurrentUserInfoReply {
  int64 id = 1;
  string name = 2;
  string role = 3;
}

message DeleteUserRequest {
    int64 id = 1 [(validate.rules).int64.gt = 0]; // 用户ID必须大于0
  }
  
message DeleteUserReply {
    bool success = 1; // 删除是否成功
}
  