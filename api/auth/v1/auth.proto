syntax = "proto3";

package krathub.auth.v1;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "errors/errors.proto";

option go_package = "github.com/horonlee/krathub/api/v1/auth;authv1";
option java_multiple_files = true;
option java_package = "dev.krathub.api.auth.v1";
option java_outer_classname = "AuthProtoV1";

// 错误码定义
enum ErrorReason {
  // 设置缺省错误码
  option (errors.default_code) = 500;
  // 用户未找到
  USER_NOT_FOUND = 0 [(errors.code) = 404];
  // 用户已存在
  USER_ALREADY_EXISTS = 1 [(errors.code) = 400];
  // 密码错误
  INCORRECT_PASSWORD = 10 [(errors.code) = 401];
  // 错误的认证信息
  INVALID_CREDENTIALS = 2 [(errors.code) = 401];
  // Token 类型错误
  INVALID_TOKEN_TYPE = 3 [(errors.code) = 400];
  // Token 已过期
  TOKEN_EXPIRED = 4 [(errors.code) = 401];
  // 没有 Token
  MISSING_TOKEN = 5 [(errors.code) = 401];
  // Token 生成失败
  TOKEN_GENERATION_FAILED = 6 [(errors.code) = 500];
  // 没有权限
  UNAUTHORIZED = 7 [(errors.code) = 403];
}

service Auth {
  rpc Hello(HelloRequest) returns (HelloResponse) {
    option (google.api.http) = {
      post: "/v1/auth/HelloTest"
      body: "*"
    };
  }

  rpc SignupByEmail(SignupByEmailRequest) returns (SignupByEmailReply) {
    option (google.api.http) = {
      post: "/v1/auth/signup/using-email"
      body: "*"
    };
  }

  rpc LoginByEmailPassword(LoginByEmailPasswordRequest) returns (LoginByEmailPasswordReply) {
    option (google.api.http) = {
      post: "/v1/auth/login/using-email-password"
      body: "*"
    };
  }

}

// 邮箱注册请求
message SignupByEmailRequest {
  // 用户名最小长度5
  string name = 1 [(buf.validate.field).string.min_len =  5];
  // 密码最小长度5，最大长度10
  string password = 2 [(buf.validate.field).string = {min_len: 5, max_len: 10}];
  // 确认密码最小长度5，最大长度10
  string password_confirm = 3 [
    (buf.validate.field).string = {min_len: 5, max_len: 10}
  ];  
  string email = 4 [(buf.validate.field).string.email = true]; // 邮箱格式验证
}

// 邮箱注册响应
message SignupByEmailReply {
  int64 id = 1;
  string name = 2;
  string email = 3;
  string role = 4;
}

// 密码登录请求
message LoginByEmailPasswordRequest {
  // 可以是用户名或邮箱
  string login_id = 1;
  string password = 2 [(buf.validate.field).string = {min_len: 5, max_len: 10}];
}

// 密码登录响应
message LoginByEmailPasswordReply {
  string token = 1;
}

// 消息定义
message HelloRequest {
  optional string greeting = 1;
}

// 响应消息定义
message HelloResponse {
  string reply = 1;
}