syntax = "proto3";

package krathub.hello.v1;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "errors/errors.proto";

option go_package = "github.com/horonlee/krathub/api/v1/hello;hellov1";
option java_multiple_files = true;
option java_package = "dev.krathub.api.hello.v1";
option java_outer_classname = "HelloProtoV1";

// 错误码定义
enum ErrorReason {
  // 设置缺省错误码
  option (errors.default_code) = 500;
  // 用户未找到
  USER_NOT_FOUND = 0 [(errors.code) = 404];
  // 用户已存在
  USER_ALREADY_EXISTS = 1 [(errors.code) = 400];
  // 密码错误
  INCORRECT_PASSWORD = 10 [(errors.code) = 401];
  // 错误的认证信息
  INVALID_CREDENTIALS = 2 [(errors.code) = 401];
  // Token 类型错误
  INVALID_TOKEN_TYPE = 3 [(errors.code) = 400];
  // Token 已过期
  TOKEN_EXPIRED = 4 [(errors.code) = 401];
  // 没有 Token
  MISSING_TOKEN = 5 [(errors.code) = 401];
  // Token 生成失败
  TOKEN_GENERATION_FAILED = 6 [(errors.code) = 500];
  // 没有权限
  UNAUTHORIZED = 7 [(errors.code) = 403];
}

// CallHello 定义一个简单的 Hello 服务
service CallHello{
  rpc Hello(HelloRequest) returns (HelloResponse) {
    option (google.api.http) = {
      post: "/CallHello/Hello"
      body: "*"
    };
  }
}

// HelloRequest 是 Hello 服务的请求消息
message HelloRequest {
  optional string req = 1;
}

// HelloResponse 是 Hello 服务的响应消息
message HelloResponse {
  string rep = 1;
}