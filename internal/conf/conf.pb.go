// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Bootstrap 配置
type Bootstrap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        *Server                `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Data          *Data                  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	App           *App                   `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	Registry      *Registry              `protobuf:"bytes,4,opt,name=registry,proto3" json:"registry,omitempty"`
	Discovery     *Discovery             `protobuf:"bytes,5,opt,name=discovery,proto3" json:"discovery,omitempty"`
	Config        *Config                `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	Trace         *Trace                 `protobuf:"bytes,7,opt,name=trace,proto3" json:"trace,omitempty"`
	Client        *Client                `protobuf:"bytes,8,opt,name=client,proto3" json:"client,omitempty"` // 新增客户端配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_conf_conf_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Bootstrap) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Bootstrap) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Bootstrap) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *Bootstrap) GetRegistry() *Registry {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *Bootstrap) GetDiscovery() *Discovery {
	if x != nil {
		return x.Discovery
	}
	return nil
}

func (x *Bootstrap) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Bootstrap) GetTrace() *Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *Bootstrap) GetClient() *Client {
	if x != nil {
		return x.Client
	}
	return nil
}

// 可复用的 TLS 配置
type TLSConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enable        bool                   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`                    // 开关
	CertPath      string                 `protobuf:"bytes,2,opt,name=cert_path,json=certPath,proto3" json:"cert_path,omitempty"` // 证书路径
	KeyPath       string                 `protobuf:"bytes,3,opt,name=key_path,json=keyPath,proto3" json:"key_path,omitempty"`    // 私钥路径
	CaPath        string                 `protobuf:"bytes,4,opt,name=ca_path,json=caPath,proto3" json:"ca_path,omitempty"`       // CA 证书路径
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSConfig) Reset() {
	*x = TLSConfig{}
	mi := &file_conf_conf_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfig) ProtoMessage() {}

func (x *TLSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfig.ProtoReflect.Descriptor instead.
func (*TLSConfig) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *TLSConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *TLSConfig) GetCertPath() string {
	if x != nil {
		return x.CertPath
	}
	return ""
}

func (x *TLSConfig) GetKeyPath() string {
	if x != nil {
		return x.KeyPath
	}
	return ""
}

func (x *TLSConfig) GetCaPath() string {
	if x != nil {
		return x.CaPath
	}
	return ""
}

// 通信服务端配置
type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Http          *Server_HTTP           `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	Grpc          *Server_GRPC           `protobuf:"bytes,2,opt,name=grpc,proto3" json:"grpc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_conf_conf_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *Server) GetHttp() *Server_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

func (x *Server) GetGrpc() *Server_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

// 客户端配置
type Client struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 使用 map 来管理所有下游 gRPC 服务的客户端配置
	Grpc          map[string]*Client_GRPC `protobuf:"bytes,1,rep,name=grpc,proto3" json:"grpc,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Client) Reset() {
	*x = Client{}
	mi := &file_conf_conf_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Client) GetGrpc() map[string]*Client_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

// 数据源配置
type Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      *Data_Database         `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Redis         *Data_Redis            `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	Client        *Data_Client           `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_conf_conf_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Data) GetDatabase() *Data_Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Data) GetRedis() *Data_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *Data) GetClient() *Data_Client {
	if x != nil {
		return x.Client
	}
	return nil
}

// 应用配置
type App struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Env           string                 `protobuf:"bytes,1,opt,name=env,proto3" json:"env,omitempty"` // dev test prod
	Jwt           *App_Jwt               `protobuf:"bytes,2,opt,name=jwt,proto3" json:"jwt,omitempty"` // JWT配置
	Log           *App_Log               `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"` // 日志配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *App) Reset() {
	*x = App{}
	mi := &file_conf_conf_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *App) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *App) GetJwt() *App_Jwt {
	if x != nil {
		return x.Jwt
	}
	return nil
}

func (x *App) GetLog() *App_Log {
	if x != nil {
		return x.Log
	}
	return nil
}

// 注册中心配置
type Registry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Registry:
	//
	//	*Registry_Consul_
	//	*Registry_Etcd_
	//	*Registry_Nacos_
	Registry      isRegistry_Registry `protobuf_oneof:"registry"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry) Reset() {
	*x = Registry{}
	mi := &file_conf_conf_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry) ProtoMessage() {}

func (x *Registry) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry.ProtoReflect.Descriptor instead.
func (*Registry) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *Registry) GetRegistry() isRegistry_Registry {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *Registry) GetConsul() *Registry_Consul {
	if x != nil {
		if x, ok := x.Registry.(*Registry_Consul_); ok {
			return x.Consul
		}
	}
	return nil
}

func (x *Registry) GetEtcd() *Registry_Etcd {
	if x != nil {
		if x, ok := x.Registry.(*Registry_Etcd_); ok {
			return x.Etcd
		}
	}
	return nil
}

func (x *Registry) GetNacos() *Registry_Nacos {
	if x != nil {
		if x, ok := x.Registry.(*Registry_Nacos_); ok {
			return x.Nacos
		}
	}
	return nil
}

type isRegistry_Registry interface {
	isRegistry_Registry()
}

type Registry_Consul_ struct {
	Consul *Registry_Consul `protobuf:"bytes,1,opt,name=consul,proto3,oneof"` // Consul 配置
}

type Registry_Etcd_ struct {
	Etcd *Registry_Etcd `protobuf:"bytes,2,opt,name=etcd,proto3,oneof"` // Etcd 配置
}

type Registry_Nacos_ struct {
	Nacos *Registry_Nacos `protobuf:"bytes,3,opt,name=nacos,proto3,oneof"` // Nacos 配置
}

func (*Registry_Consul_) isRegistry_Registry() {}

func (*Registry_Etcd_) isRegistry_Registry() {}

func (*Registry_Nacos_) isRegistry_Registry() {}

// 服务发现配置
type Discovery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Discovery:
	//
	//	*Discovery_Consul_
	//	*Discovery_Etcd_
	//	*Discovery_Nacos_
	Discovery     isDiscovery_Discovery `protobuf_oneof:"discovery"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Discovery) Reset() {
	*x = Discovery{}
	mi := &file_conf_conf_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Discovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discovery) ProtoMessage() {}

func (x *Discovery) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discovery.ProtoReflect.Descriptor instead.
func (*Discovery) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *Discovery) GetDiscovery() isDiscovery_Discovery {
	if x != nil {
		return x.Discovery
	}
	return nil
}

func (x *Discovery) GetConsul() *Discovery_Consul {
	if x != nil {
		if x, ok := x.Discovery.(*Discovery_Consul_); ok {
			return x.Consul
		}
	}
	return nil
}

func (x *Discovery) GetEtcd() *Discovery_Etcd {
	if x != nil {
		if x, ok := x.Discovery.(*Discovery_Etcd_); ok {
			return x.Etcd
		}
	}
	return nil
}

func (x *Discovery) GetNacos() *Discovery_Nacos {
	if x != nil {
		if x, ok := x.Discovery.(*Discovery_Nacos_); ok {
			return x.Nacos
		}
	}
	return nil
}

type isDiscovery_Discovery interface {
	isDiscovery_Discovery()
}

type Discovery_Consul_ struct {
	Consul *Discovery_Consul `protobuf:"bytes,1,opt,name=consul,proto3,oneof"` // Consul 配置
}

type Discovery_Etcd_ struct {
	Etcd *Discovery_Etcd `protobuf:"bytes,2,opt,name=etcd,proto3,oneof"` // Etcd 配置
}

type Discovery_Nacos_ struct {
	Nacos *Discovery_Nacos `protobuf:"bytes,3,opt,name=nacos,proto3,oneof"` // Nacos 配置
}

func (*Discovery_Consul_) isDiscovery_Discovery() {}

func (*Discovery_Etcd_) isDiscovery_Discovery() {}

func (*Discovery_Nacos_) isDiscovery_Discovery() {}

// 配置中心配置
type Config struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Config:
	//
	//	*Config_Consul_
	//	*Config_Etcd_
	//	*Config_Nacos_
	Config        isConfig_Config `protobuf_oneof:"config"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_conf_conf_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{8}
}

func (x *Config) GetConfig() isConfig_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Config) GetConsul() *Config_Consul {
	if x != nil {
		if x, ok := x.Config.(*Config_Consul_); ok {
			return x.Consul
		}
	}
	return nil
}

func (x *Config) GetEtcd() *Config_Etcd {
	if x != nil {
		if x, ok := x.Config.(*Config_Etcd_); ok {
			return x.Etcd
		}
	}
	return nil
}

func (x *Config) GetNacos() *Config_Nacos {
	if x != nil {
		if x, ok := x.Config.(*Config_Nacos_); ok {
			return x.Nacos
		}
	}
	return nil
}

type isConfig_Config interface {
	isConfig_Config()
}

type Config_Consul_ struct {
	Consul *Config_Consul `protobuf:"bytes,1,opt,name=consul,proto3,oneof"` // Consul 配置
}

type Config_Etcd_ struct {
	Etcd *Config_Etcd `protobuf:"bytes,2,opt,name=etcd,proto3,oneof"` // Etcd 配置
}

type Config_Nacos_ struct {
	Nacos *Config_Nacos `protobuf:"bytes,3,opt,name=nacos,proto3,oneof"` // Nacos 配置
}

func (*Config_Consul_) isConfig_Config() {}

func (*Config_Etcd_) isConfig_Config() {}

func (*Config_Nacos_) isConfig_Config() {}

// 链路追踪配置
type Trace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trace) Reset() {
	*x = Trace{}
	mi := &file_conf_conf_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace) ProtoMessage() {}

func (x *Trace) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace.ProtoReflect.Descriptor instead.
func (*Trace) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{9}
}

func (x *Trace) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type Server_HTTP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Tls           *TLSConfig             `protobuf:"bytes,4,opt,name=tls,proto3" json:"tls,omitempty"` // 为 HTTP 添加 TLS 配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_HTTP) Reset() {
	*x = Server_HTTP{}
	mi := &file_conf_conf_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_HTTP) ProtoMessage() {}

func (x *Server_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_HTTP.ProtoReflect.Descriptor instead.
func (*Server_HTTP) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Server_HTTP) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_HTTP) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_HTTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Server_HTTP) GetTls() *TLSConfig {
	if x != nil {
		return x.Tls
	}
	return nil
}

type Server_GRPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Tls           *TLSConfig             `protobuf:"bytes,4,opt,name=tls,proto3" json:"tls,omitempty"` // 为 gRPC 添加 TLS 配置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server_GRPC) Reset() {
	*x = Server_GRPC{}
	mi := &file_conf_conf_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server_GRPC) ProtoMessage() {}

func (x *Server_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server_GRPC.ProtoReflect.Descriptor instead.
func (*Server_GRPC) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Server_GRPC) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Server_GRPC) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Server_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *Server_GRPC) GetTls() *TLSConfig {
	if x != nil {
		return x.Tls
	}
	return nil
}

type Client_GRPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Tls           *TLSConfig             `protobuf:"bytes,2,opt,name=tls,proto3" json:"tls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Client_GRPC) Reset() {
	*x = Client_GRPC{}
	mi := &file_conf_conf_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client_GRPC) ProtoMessage() {}

func (x *Client_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client_GRPC.ProtoReflect.Descriptor instead.
func (*Client_GRPC) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Client_GRPC) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Client_GRPC) GetTls() *TLSConfig {
	if x != nil {
		return x.Tls
	}
	return nil
}

type Data_Database struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Driver        string                 `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Database) Reset() {
	*x = Data_Database{}
	mi := &file_conf_conf_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Database) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Database) ProtoMessage() {}

func (x *Data_Database) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Database.ProtoReflect.Descriptor instead.
func (*Data_Database) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Data_Database) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Data_Database) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Data_Redis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Addr          string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	UserName      string                 `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"` // Redis用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`                 // Redis密码
	Db            int32                  `protobuf:"varint,5,opt,name=db,proto3" json:"db,omitempty"`                            // Redis数据库编号
	ReadTimeout   *durationpb.Duration   `protobuf:"bytes,6,opt,name=read_timeout,json=readTimeout,proto3" json:"read_timeout,omitempty"`
	WriteTimeout  *durationpb.Duration   `protobuf:"bytes,7,opt,name=write_timeout,json=writeTimeout,proto3" json:"write_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Redis) Reset() {
	*x = Data_Redis{}
	mi := &file_conf_conf_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Redis) ProtoMessage() {}

func (x *Data_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Redis.ProtoReflect.Descriptor instead.
func (*Data_Redis) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Data_Redis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Data_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Data_Redis) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Data_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Data_Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

func (x *Data_Redis) GetReadTimeout() *durationpb.Duration {
	if x != nil {
		return x.ReadTimeout
	}
	return nil
}

func (x *Data_Redis) GetWriteTimeout() *durationpb.Duration {
	if x != nil {
		return x.WriteTimeout
	}
	return nil
}

type Data_Client struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grpc          []*Data_Client_GRPC    `protobuf:"bytes,1,rep,name=grpc,proto3" json:"grpc,omitempty"`
	Http          []*Data_Client_HTTP    `protobuf:"bytes,2,rep,name=http,proto3" json:"http,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Client) Reset() {
	*x = Data_Client{}
	mi := &file_conf_conf_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Client) ProtoMessage() {}

func (x *Data_Client) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Client.ProtoReflect.Descriptor instead.
func (*Data_Client) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4, 2}
}

func (x *Data_Client) GetGrpc() []*Data_Client_GRPC {
	if x != nil {
		return x.Grpc
	}
	return nil
}

func (x *Data_Client) GetHttp() []*Data_Client_HTTP {
	if x != nil {
		return x.Http
	}
	return nil
}

type Data_Client_HTTP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Endpoint      string                 `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	EnableTls     bool                   `protobuf:"varint,3,opt,name=enable_tls,json=enableTls,proto3" json:"enable_tls,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Client_HTTP) Reset() {
	*x = Data_Client_HTTP{}
	mi := &file_conf_conf_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Client_HTTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Client_HTTP) ProtoMessage() {}

func (x *Data_Client_HTTP) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Client_HTTP.ProtoReflect.Descriptor instead.
func (*Data_Client_HTTP) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4, 2, 0}
}

func (x *Data_Client_HTTP) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Data_Client_HTTP) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Data_Client_HTTP) GetEnableTls() bool {
	if x != nil {
		return x.EnableTls
	}
	return false
}

func (x *Data_Client_HTTP) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Data_Client_GRPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Endpoint      string                 `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	EnableTls     bool                   `protobuf:"varint,3,opt,name=enable_tls,json=enableTls,proto3" json:"enable_tls,omitempty"`
	Timeout       *durationpb.Duration   `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data_Client_GRPC) Reset() {
	*x = Data_Client_GRPC{}
	mi := &file_conf_conf_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data_Client_GRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data_Client_GRPC) ProtoMessage() {}

func (x *Data_Client_GRPC) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data_Client_GRPC.ProtoReflect.Descriptor instead.
func (*Data_Client_GRPC) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{4, 2, 1}
}

func (x *Data_Client_GRPC) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Data_Client_GRPC) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Data_Client_GRPC) GetEnableTls() bool {
	if x != nil {
		return x.EnableTls
	}
	return false
}

func (x *Data_Client_GRPC) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type App_Jwt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SecretKey     string                 `protobuf:"bytes,1,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"` // JWT密钥
	Expire        int32                  `protobuf:"varint,2,opt,name=expire,proto3" json:"expire,omitempty"`                       // JWT过期时间，单位秒
	Issuer        string                 `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`                        // JWT签发者
	Audience      string                 `protobuf:"bytes,4,opt,name=audience,proto3" json:"audience,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *App_Jwt) Reset() {
	*x = App_Jwt{}
	mi := &file_conf_conf_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *App_Jwt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App_Jwt) ProtoMessage() {}

func (x *App_Jwt) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App_Jwt.ProtoReflect.Descriptor instead.
func (*App_Jwt) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 0}
}

func (x *App_Jwt) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *App_Jwt) GetExpire() int32 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *App_Jwt) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *App_Jwt) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

type App_Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         int32                  `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`                             // -1~5 代表了debug,info,warn,error,dpanic,panic,fatal
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                        // 日志文件名
	MaxSize       int32                  `protobuf:"varint,3,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`          // 日志文件最大大小
	MaxBackups    int32                  `protobuf:"varint,4,opt,name=max_backups,json=maxBackups,proto3" json:"max_backups,omitempty"` // 日志文件最大备份数
	MaxAge        int32                  `protobuf:"varint,5,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`             // 日志文件最大保留天数
	Compress      bool                   `protobuf:"varint,6,opt,name=compress,proto3" json:"compress,omitempty"`                       // 是否压缩日志文件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *App_Log) Reset() {
	*x = App_Log{}
	mi := &file_conf_conf_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *App_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App_Log) ProtoMessage() {}

func (x *App_Log) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App_Log.ProtoReflect.Descriptor instead.
func (*App_Log) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{5, 1}
}

func (x *App_Log) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *App_Log) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *App_Log) GetMaxSize() int32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *App_Log) GetMaxBackups() int32 {
	if x != nil {
		return x.MaxBackups
	}
	return 0
}

func (x *App_Log) GetMaxAge() int32 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *App_Log) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

type Registry_Consul struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`             // Consul 地址
	Scheme        string                 `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`         // 协议
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`           // 访问令牌
	Datacenter    string                 `protobuf:"bytes,4,opt,name=datacenter,proto3" json:"datacenter,omitempty"` // 数据中心
	Timeout       *durationpb.Duration   `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`       // 超时时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry_Consul) Reset() {
	*x = Registry_Consul{}
	mi := &file_conf_conf_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Consul) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Consul) ProtoMessage() {}

func (x *Registry_Consul) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Consul.ProtoReflect.Descriptor instead.
func (*Registry_Consul) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Registry_Consul) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Registry_Consul) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Registry_Consul) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Registry_Consul) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *Registry_Consul) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Registry_Etcd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoints     []string               `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"` // Etcd 端点列表
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`   // 用户名
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`   // 密码
	Timeout       *durationpb.Duration   `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`     // 超时时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry_Etcd) Reset() {
	*x = Registry_Etcd{}
	mi := &file_conf_conf_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Etcd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Etcd) ProtoMessage() {}

func (x *Registry_Etcd) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Etcd.ProtoReflect.Descriptor instead.
func (*Registry_Etcd) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Registry_Etcd) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Registry_Etcd) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Registry_Etcd) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Registry_Etcd) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Registry_Nacos struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`           // Nacos 地址
	Port          uint64                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`          // Nacos 端口
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"` // 命名空间
	Group         string                 `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`         // 分组
	Username      string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`   // 用户名
	Password      string                 `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`   // 密码
	Timeout       *durationpb.Duration   `protobuf:"bytes,7,opt,name=timeout,proto3" json:"timeout,omitempty"`     // 超时时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registry_Nacos) Reset() {
	*x = Registry_Nacos{}
	mi := &file_conf_conf_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registry_Nacos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registry_Nacos) ProtoMessage() {}

func (x *Registry_Nacos) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registry_Nacos.ProtoReflect.Descriptor instead.
func (*Registry_Nacos) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{6, 2}
}

func (x *Registry_Nacos) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Registry_Nacos) GetPort() uint64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Registry_Nacos) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Registry_Nacos) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Registry_Nacos) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Registry_Nacos) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Registry_Nacos) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Discovery_Consul struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`             // Consul 地址
	Scheme        string                 `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`         // 协议
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`           // 访问令牌
	Datacenter    string                 `protobuf:"bytes,4,opt,name=datacenter,proto3" json:"datacenter,omitempty"` // 数据中心
	Timeout       *durationpb.Duration   `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`       // 超时时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Discovery_Consul) Reset() {
	*x = Discovery_Consul{}
	mi := &file_conf_conf_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Discovery_Consul) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discovery_Consul) ProtoMessage() {}

func (x *Discovery_Consul) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discovery_Consul.ProtoReflect.Descriptor instead.
func (*Discovery_Consul) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Discovery_Consul) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Discovery_Consul) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Discovery_Consul) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Discovery_Consul) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *Discovery_Consul) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Discovery_Etcd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoints     []string               `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"` // Etcd 端点列表
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`   // 用户名
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`   // 密码
	Timeout       *durationpb.Duration   `protobuf:"bytes,4,opt,name=timeout,proto3" json:"timeout,omitempty"`     // 超时时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Discovery_Etcd) Reset() {
	*x = Discovery_Etcd{}
	mi := &file_conf_conf_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Discovery_Etcd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discovery_Etcd) ProtoMessage() {}

func (x *Discovery_Etcd) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discovery_Etcd.ProtoReflect.Descriptor instead.
func (*Discovery_Etcd) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Discovery_Etcd) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Discovery_Etcd) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Discovery_Etcd) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Discovery_Etcd) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Discovery_Nacos struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`           // Nacos 地址
	Port          uint64                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`          // Nacos 端口
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"` // 命名空间
	Group         string                 `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`         // 分组
	Username      string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`   // 用户名
	Password      string                 `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`   // 密码
	Timeout       *durationpb.Duration   `protobuf:"bytes,7,opt,name=timeout,proto3" json:"timeout,omitempty"`     // 超时时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Discovery_Nacos) Reset() {
	*x = Discovery_Nacos{}
	mi := &file_conf_conf_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Discovery_Nacos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discovery_Nacos) ProtoMessage() {}

func (x *Discovery_Nacos) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discovery_Nacos.ProtoReflect.Descriptor instead.
func (*Discovery_Nacos) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{7, 2}
}

func (x *Discovery_Nacos) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Discovery_Nacos) GetPort() uint64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Discovery_Nacos) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Discovery_Nacos) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Discovery_Nacos) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Discovery_Nacos) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Discovery_Nacos) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Config_Consul struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`             // Consul 地址
	Scheme        string                 `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`         // 协议
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`           // 访问令牌
	Datacenter    string                 `protobuf:"bytes,4,opt,name=datacenter,proto3" json:"datacenter,omitempty"` // 数据中心
	Key           string                 `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`               // 配置键名
	Timeout       *durationpb.Duration   `protobuf:"bytes,6,opt,name=timeout,proto3" json:"timeout,omitempty"`       // 超时时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config_Consul) Reset() {
	*x = Config_Consul{}
	mi := &file_conf_conf_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config_Consul) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Consul) ProtoMessage() {}

func (x *Config_Consul) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Consul.ProtoReflect.Descriptor instead.
func (*Config_Consul) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Config_Consul) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Config_Consul) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Config_Consul) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Config_Consul) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *Config_Consul) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Config_Consul) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Config_Etcd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoints     []string               `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"` // Etcd 端点列表
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`   // 用户名
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`   // 密码
	Key           string                 `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`             // 配置键名
	Timeout       *durationpb.Duration   `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`     // 超时时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config_Etcd) Reset() {
	*x = Config_Etcd{}
	mi := &file_conf_conf_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config_Etcd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Etcd) ProtoMessage() {}

func (x *Config_Etcd) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Etcd.ProtoReflect.Descriptor instead.
func (*Config_Etcd) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{8, 1}
}

func (x *Config_Etcd) GetEndpoints() []string {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Config_Etcd) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Config_Etcd) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Config_Etcd) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Config_Etcd) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type Config_Nacos struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addr          string                 `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`                   // Nacos 地址
	Port          uint64                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`                  // Nacos 端口
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`         // 命名空间
	DataId        string                 `protobuf:"bytes,4,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"` // 数据ID
	Group         string                 `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`                 // 分组
	Username      string                 `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`           // 用户名
	Password      string                 `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`           // 密码
	Timeout       *durationpb.Duration   `protobuf:"bytes,8,opt,name=timeout,proto3" json:"timeout,omitempty"`             // 超时时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config_Nacos) Reset() {
	*x = Config_Nacos{}
	mi := &file_conf_conf_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config_Nacos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Nacos) ProtoMessage() {}

func (x *Config_Nacos) ProtoReflect() protoreflect.Message {
	mi := &file_conf_conf_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Nacos.ProtoReflect.Descriptor instead.
func (*Config_Nacos) Descriptor() ([]byte, []int) {
	return file_conf_conf_proto_rawDescGZIP(), []int{8, 2}
}

func (x *Config_Nacos) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *Config_Nacos) GetPort() uint64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Config_Nacos) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Config_Nacos) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *Config_Nacos) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Config_Nacos) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Config_Nacos) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Config_Nacos) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

var File_conf_conf_proto protoreflect.FileDescriptor

const file_conf_conf_proto_rawDesc = "" +
	"\n" +
	"\x0fconf/conf.proto\x12\n" +
	"kratos.api\x1a\x1egoogle/protobuf/duration.proto\"\xe8\x02\n" +
	"\tBootstrap\x12*\n" +
	"\x06server\x18\x01 \x01(\v2\x12.kratos.api.ServerR\x06server\x12$\n" +
	"\x04data\x18\x02 \x01(\v2\x10.kratos.api.DataR\x04data\x12!\n" +
	"\x03app\x18\x03 \x01(\v2\x0f.kratos.api.AppR\x03app\x120\n" +
	"\bregistry\x18\x04 \x01(\v2\x14.kratos.api.RegistryR\bregistry\x123\n" +
	"\tdiscovery\x18\x05 \x01(\v2\x15.kratos.api.DiscoveryR\tdiscovery\x12*\n" +
	"\x06config\x18\x06 \x01(\v2\x12.kratos.api.ConfigR\x06config\x12'\n" +
	"\x05trace\x18\a \x01(\v2\x11.kratos.api.TraceR\x05trace\x12*\n" +
	"\x06client\x18\b \x01(\v2\x12.kratos.api.ClientR\x06client\"t\n" +
	"\tTLSConfig\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable\x12\x1b\n" +
	"\tcert_path\x18\x02 \x01(\tR\bcertPath\x12\x19\n" +
	"\bkey_path\x18\x03 \x01(\tR\akeyPath\x12\x17\n" +
	"\aca_path\x18\x04 \x01(\tR\x06caPath\"\x8c\x03\n" +
	"\x06Server\x12+\n" +
	"\x04http\x18\x01 \x01(\v2\x17.kratos.api.Server.HTTPR\x04http\x12+\n" +
	"\x04grpc\x18\x02 \x01(\v2\x17.kratos.api.Server.GRPCR\x04grpc\x1a\x92\x01\n" +
	"\x04HTTP\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12'\n" +
	"\x03tls\x18\x04 \x01(\v2\x15.kratos.api.TLSConfigR\x03tls\x1a\x92\x01\n" +
	"\x04GRPC\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12'\n" +
	"\x03tls\x18\x04 \x01(\v2\x15.kratos.api.TLSConfigR\x03tls\"\xd9\x01\n" +
	"\x06Client\x120\n" +
	"\x04grpc\x18\x01 \x03(\v2\x1c.kratos.api.Client.GrpcEntryR\x04grpc\x1aK\n" +
	"\x04GRPC\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12'\n" +
	"\x03tls\x18\x02 \x01(\v2\x15.kratos.api.TLSConfigR\x03tls\x1aP\n" +
	"\tGrpcEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.kratos.api.Client.GRPCR\x05value:\x028\x01\"\xfe\x06\n" +
	"\x04Data\x125\n" +
	"\bdatabase\x18\x01 \x01(\v2\x19.kratos.api.Data.DatabaseR\bdatabase\x12,\n" +
	"\x05redis\x18\x02 \x01(\v2\x16.kratos.api.Data.RedisR\x05redis\x12/\n" +
	"\x06client\x18\x03 \x01(\v2\x17.kratos.api.Data.ClientR\x06client\x1a:\n" +
	"\bDatabase\x12\x16\n" +
	"\x06driver\x18\x01 \x01(\tR\x06driver\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x1a\xfc\x01\n" +
	"\x05Redis\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x12\n" +
	"\x04addr\x18\x02 \x01(\tR\x04addr\x12\x1b\n" +
	"\tuser_name\x18\x03 \x01(\tR\buserName\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x0e\n" +
	"\x02db\x18\x05 \x01(\x05R\x02db\x12<\n" +
	"\fread_timeout\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\vreadTimeout\x12>\n" +
	"\rwrite_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\fwriteTimeout\x1a\xa4\x03\n" +
	"\x06Client\x120\n" +
	"\x04grpc\x18\x01 \x03(\v2\x1c.kratos.api.Data.Client.GRPCR\x04grpc\x120\n" +
	"\x04http\x18\x02 \x03(\v2\x1c.kratos.api.Data.Client.HTTPR\x04http\x1a\x99\x01\n" +
	"\x04HTTP\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1a\n" +
	"\bendpoint\x18\x02 \x01(\tR\bendpoint\x12\x1d\n" +
	"\n" +
	"enable_tls\x18\x03 \x01(\bR\tenableTls\x123\n" +
	"\atimeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1a\x99\x01\n" +
	"\x04GRPC\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1a\n" +
	"\bendpoint\x18\x02 \x01(\tR\bendpoint\x12\x1d\n" +
	"\n" +
	"enable_tls\x18\x03 \x01(\bR\tenableTls\x123\n" +
	"\atimeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\atimeout\"\x82\x03\n" +
	"\x03App\x12\x10\n" +
	"\x03env\x18\x01 \x01(\tR\x03env\x12%\n" +
	"\x03jwt\x18\x02 \x01(\v2\x13.kratos.api.App.JwtR\x03jwt\x12%\n" +
	"\x03log\x18\x03 \x01(\v2\x13.kratos.api.App.LogR\x03log\x1ap\n" +
	"\x03Jwt\x12\x1d\n" +
	"\n" +
	"secret_key\x18\x01 \x01(\tR\tsecretKey\x12\x16\n" +
	"\x06expire\x18\x02 \x01(\x05R\x06expire\x12\x16\n" +
	"\x06issuer\x18\x03 \x01(\tR\x06issuer\x12\x1a\n" +
	"\baudience\x18\x04 \x01(\tR\baudience\x1a\xa8\x01\n" +
	"\x03Log\x12\x14\n" +
	"\x05level\x18\x01 \x01(\x05R\x05level\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12\x19\n" +
	"\bmax_size\x18\x03 \x01(\x05R\amaxSize\x12\x1f\n" +
	"\vmax_backups\x18\x04 \x01(\x05R\n" +
	"maxBackups\x12\x17\n" +
	"\amax_age\x18\x05 \x01(\x05R\x06maxAge\x12\x1a\n" +
	"\bcompress\x18\x06 \x01(\bR\bcompress\"\xbb\x05\n" +
	"\bRegistry\x125\n" +
	"\x06consul\x18\x01 \x01(\v2\x1b.kratos.api.Registry.ConsulH\x00R\x06consul\x12/\n" +
	"\x04etcd\x18\x02 \x01(\v2\x19.kratos.api.Registry.EtcdH\x00R\x04etcd\x122\n" +
	"\x05nacos\x18\x03 \x01(\v2\x1a.kratos.api.Registry.NacosH\x00R\x05nacos\x1a\x9f\x01\n" +
	"\x06Consul\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12\x1e\n" +
	"\n" +
	"datacenter\x18\x04 \x01(\tR\n" +
	"datacenter\x123\n" +
	"\atimeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1a\x91\x01\n" +
	"\x04Etcd\x12\x1c\n" +
	"\tendpoints\x18\x01 \x03(\tR\tendpoints\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x123\n" +
	"\atimeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1a\xd0\x01\n" +
	"\x05Nacos\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x04R\x04port\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05group\x18\x04 \x01(\tR\x05group\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x06 \x01(\tR\bpassword\x123\n" +
	"\atimeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\atimeoutB\n" +
	"\n" +
	"\bregistry\"\xc0\x05\n" +
	"\tDiscovery\x126\n" +
	"\x06consul\x18\x01 \x01(\v2\x1c.kratos.api.Discovery.ConsulH\x00R\x06consul\x120\n" +
	"\x04etcd\x18\x02 \x01(\v2\x1a.kratos.api.Discovery.EtcdH\x00R\x04etcd\x123\n" +
	"\x05nacos\x18\x03 \x01(\v2\x1b.kratos.api.Discovery.NacosH\x00R\x05nacos\x1a\x9f\x01\n" +
	"\x06Consul\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12\x1e\n" +
	"\n" +
	"datacenter\x18\x04 \x01(\tR\n" +
	"datacenter\x123\n" +
	"\atimeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1a\x91\x01\n" +
	"\x04Etcd\x12\x1c\n" +
	"\tendpoints\x18\x01 \x03(\tR\tendpoints\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x123\n" +
	"\atimeout\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1a\xd0\x01\n" +
	"\x05Nacos\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x04R\x04port\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05group\x18\x04 \x01(\tR\x05group\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x06 \x01(\tR\bpassword\x123\n" +
	"\atimeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\atimeoutB\v\n" +
	"\tdiscovery\"\xee\x05\n" +
	"\x06Config\x123\n" +
	"\x06consul\x18\x01 \x01(\v2\x19.kratos.api.Config.ConsulH\x00R\x06consul\x12-\n" +
	"\x04etcd\x18\x02 \x01(\v2\x17.kratos.api.Config.EtcdH\x00R\x04etcd\x120\n" +
	"\x05nacos\x18\x03 \x01(\v2\x18.kratos.api.Config.NacosH\x00R\x05nacos\x1a\xb1\x01\n" +
	"\x06Consul\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12\x1e\n" +
	"\n" +
	"datacenter\x18\x04 \x01(\tR\n" +
	"datacenter\x12\x10\n" +
	"\x03key\x18\x05 \x01(\tR\x03key\x123\n" +
	"\atimeout\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1a\xa3\x01\n" +
	"\x04Etcd\x12\x1c\n" +
	"\tendpoints\x18\x01 \x03(\tR\tendpoints\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x10\n" +
	"\x03key\x18\x04 \x01(\tR\x03key\x123\n" +
	"\atimeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x1a\xe9\x01\n" +
	"\x05Nacos\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x04R\x04port\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x17\n" +
	"\adata_id\x18\x04 \x01(\tR\x06dataId\x12\x14\n" +
	"\x05group\x18\x05 \x01(\tR\x05group\x12\x1a\n" +
	"\busername\x18\x06 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\a \x01(\tR\bpassword\x123\n" +
	"\atimeout\x18\b \x01(\v2\x19.google.protobuf.DurationR\atimeoutB\b\n" +
	"\x06config\"#\n" +
	"\x05Trace\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpointB\x1cZ\x1akrathub/internal/conf;confb\x06proto3"

var (
	file_conf_conf_proto_rawDescOnce sync.Once
	file_conf_conf_proto_rawDescData []byte
)

func file_conf_conf_proto_rawDescGZIP() []byte {
	file_conf_conf_proto_rawDescOnce.Do(func() {
		file_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conf_conf_proto_rawDesc), len(file_conf_conf_proto_rawDesc)))
	})
	return file_conf_conf_proto_rawDescData
}

var file_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_conf_conf_proto_goTypes = []any{
	(*Bootstrap)(nil),           // 0: kratos.api.Bootstrap
	(*TLSConfig)(nil),           // 1: kratos.api.TLSConfig
	(*Server)(nil),              // 2: kratos.api.Server
	(*Client)(nil),              // 3: kratos.api.Client
	(*Data)(nil),                // 4: kratos.api.Data
	(*App)(nil),                 // 5: kratos.api.App
	(*Registry)(nil),            // 6: kratos.api.Registry
	(*Discovery)(nil),           // 7: kratos.api.Discovery
	(*Config)(nil),              // 8: kratos.api.Config
	(*Trace)(nil),               // 9: kratos.api.Trace
	(*Server_HTTP)(nil),         // 10: kratos.api.Server.HTTP
	(*Server_GRPC)(nil),         // 11: kratos.api.Server.GRPC
	(*Client_GRPC)(nil),         // 12: kratos.api.Client.GRPC
	nil,                         // 13: kratos.api.Client.GrpcEntry
	(*Data_Database)(nil),       // 14: kratos.api.Data.Database
	(*Data_Redis)(nil),          // 15: kratos.api.Data.Redis
	(*Data_Client)(nil),         // 16: kratos.api.Data.Client
	(*Data_Client_HTTP)(nil),    // 17: kratos.api.Data.Client.HTTP
	(*Data_Client_GRPC)(nil),    // 18: kratos.api.Data.Client.GRPC
	(*App_Jwt)(nil),             // 19: kratos.api.App.Jwt
	(*App_Log)(nil),             // 20: kratos.api.App.Log
	(*Registry_Consul)(nil),     // 21: kratos.api.Registry.Consul
	(*Registry_Etcd)(nil),       // 22: kratos.api.Registry.Etcd
	(*Registry_Nacos)(nil),      // 23: kratos.api.Registry.Nacos
	(*Discovery_Consul)(nil),    // 24: kratos.api.Discovery.Consul
	(*Discovery_Etcd)(nil),      // 25: kratos.api.Discovery.Etcd
	(*Discovery_Nacos)(nil),     // 26: kratos.api.Discovery.Nacos
	(*Config_Consul)(nil),       // 27: kratos.api.Config.Consul
	(*Config_Etcd)(nil),         // 28: kratos.api.Config.Etcd
	(*Config_Nacos)(nil),        // 29: kratos.api.Config.Nacos
	(*durationpb.Duration)(nil), // 30: google.protobuf.Duration
}
var file_conf_conf_proto_depIdxs = []int32{
	2,  // 0: kratos.api.Bootstrap.server:type_name -> kratos.api.Server
	4,  // 1: kratos.api.Bootstrap.data:type_name -> kratos.api.Data
	5,  // 2: kratos.api.Bootstrap.app:type_name -> kratos.api.App
	6,  // 3: kratos.api.Bootstrap.registry:type_name -> kratos.api.Registry
	7,  // 4: kratos.api.Bootstrap.discovery:type_name -> kratos.api.Discovery
	8,  // 5: kratos.api.Bootstrap.config:type_name -> kratos.api.Config
	9,  // 6: kratos.api.Bootstrap.trace:type_name -> kratos.api.Trace
	3,  // 7: kratos.api.Bootstrap.client:type_name -> kratos.api.Client
	10, // 8: kratos.api.Server.http:type_name -> kratos.api.Server.HTTP
	11, // 9: kratos.api.Server.grpc:type_name -> kratos.api.Server.GRPC
	13, // 10: kratos.api.Client.grpc:type_name -> kratos.api.Client.GrpcEntry
	14, // 11: kratos.api.Data.database:type_name -> kratos.api.Data.Database
	15, // 12: kratos.api.Data.redis:type_name -> kratos.api.Data.Redis
	16, // 13: kratos.api.Data.client:type_name -> kratos.api.Data.Client
	19, // 14: kratos.api.App.jwt:type_name -> kratos.api.App.Jwt
	20, // 15: kratos.api.App.log:type_name -> kratos.api.App.Log
	21, // 16: kratos.api.Registry.consul:type_name -> kratos.api.Registry.Consul
	22, // 17: kratos.api.Registry.etcd:type_name -> kratos.api.Registry.Etcd
	23, // 18: kratos.api.Registry.nacos:type_name -> kratos.api.Registry.Nacos
	24, // 19: kratos.api.Discovery.consul:type_name -> kratos.api.Discovery.Consul
	25, // 20: kratos.api.Discovery.etcd:type_name -> kratos.api.Discovery.Etcd
	26, // 21: kratos.api.Discovery.nacos:type_name -> kratos.api.Discovery.Nacos
	27, // 22: kratos.api.Config.consul:type_name -> kratos.api.Config.Consul
	28, // 23: kratos.api.Config.etcd:type_name -> kratos.api.Config.Etcd
	29, // 24: kratos.api.Config.nacos:type_name -> kratos.api.Config.Nacos
	30, // 25: kratos.api.Server.HTTP.timeout:type_name -> google.protobuf.Duration
	1,  // 26: kratos.api.Server.HTTP.tls:type_name -> kratos.api.TLSConfig
	30, // 27: kratos.api.Server.GRPC.timeout:type_name -> google.protobuf.Duration
	1,  // 28: kratos.api.Server.GRPC.tls:type_name -> kratos.api.TLSConfig
	1,  // 29: kratos.api.Client.GRPC.tls:type_name -> kratos.api.TLSConfig
	12, // 30: kratos.api.Client.GrpcEntry.value:type_name -> kratos.api.Client.GRPC
	30, // 31: kratos.api.Data.Redis.read_timeout:type_name -> google.protobuf.Duration
	30, // 32: kratos.api.Data.Redis.write_timeout:type_name -> google.protobuf.Duration
	18, // 33: kratos.api.Data.Client.grpc:type_name -> kratos.api.Data.Client.GRPC
	17, // 34: kratos.api.Data.Client.http:type_name -> kratos.api.Data.Client.HTTP
	30, // 35: kratos.api.Data.Client.HTTP.timeout:type_name -> google.protobuf.Duration
	30, // 36: kratos.api.Data.Client.GRPC.timeout:type_name -> google.protobuf.Duration
	30, // 37: kratos.api.Registry.Consul.timeout:type_name -> google.protobuf.Duration
	30, // 38: kratos.api.Registry.Etcd.timeout:type_name -> google.protobuf.Duration
	30, // 39: kratos.api.Registry.Nacos.timeout:type_name -> google.protobuf.Duration
	30, // 40: kratos.api.Discovery.Consul.timeout:type_name -> google.protobuf.Duration
	30, // 41: kratos.api.Discovery.Etcd.timeout:type_name -> google.protobuf.Duration
	30, // 42: kratos.api.Discovery.Nacos.timeout:type_name -> google.protobuf.Duration
	30, // 43: kratos.api.Config.Consul.timeout:type_name -> google.protobuf.Duration
	30, // 44: kratos.api.Config.Etcd.timeout:type_name -> google.protobuf.Duration
	30, // 45: kratos.api.Config.Nacos.timeout:type_name -> google.protobuf.Duration
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_conf_conf_proto_init() }
func file_conf_conf_proto_init() {
	if File_conf_conf_proto != nil {
		return
	}
	file_conf_conf_proto_msgTypes[6].OneofWrappers = []any{
		(*Registry_Consul_)(nil),
		(*Registry_Etcd_)(nil),
		(*Registry_Nacos_)(nil),
	}
	file_conf_conf_proto_msgTypes[7].OneofWrappers = []any{
		(*Discovery_Consul_)(nil),
		(*Discovery_Etcd_)(nil),
		(*Discovery_Nacos_)(nil),
	}
	file_conf_conf_proto_msgTypes[8].OneofWrappers = []any{
		(*Config_Consul_)(nil),
		(*Config_Etcd_)(nil),
		(*Config_Nacos_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conf_conf_proto_rawDesc), len(file_conf_conf_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conf_conf_proto_goTypes,
		DependencyIndexes: file_conf_conf_proto_depIdxs,
		MessageInfos:      file_conf_conf_proto_msgTypes,
	}.Build()
	File_conf_conf_proto = out.File
	file_conf_conf_proto_goTypes = nil
	file_conf_conf_proto_depIdxs = nil
}
